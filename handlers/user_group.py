import os
from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, CallbackQuery, InputMediaPhoto
from dotenv import load_dotenv

from app.change_price import Settings
from filters.chat_type import ChatTypeFilter
from aiogram import Bot
import app.keyboards as kb
from app.database.requests import get_all_orders, get_driver, start_order_execution, delete_order_execution

user_group_router = Router()
user_group_router.message.filter(ChatTypeFilter(['group', 'supergroup']))
load_dotenv()


# restricted_words = {'–∫–∞–±–∞–Ω', '—Ö–æ–º—è–∫', '–≤—ã–ø—É—Ö–æ–ª—å'}


# def clean_text(text: str):
#     return text.translate(str.maketrans('', '', punctuation))

# @user_group_router.message()
# async def cleaner(message: Message):
#     if restricted_words.intersection(message.text.lower().split()):
#         await message.answer(f'{message.from_user.first_name}, —Å–æ–±–ª—é–¥–∞–π—Ç–µ –ø–æ—Ä—è–¥–æ–∫ —á–∞—Ç–∞')
#         await message.delete()

# @user_group_router.message(CommandStart())
# async def cmd_start(message: Message):
#     await message.answer(f'{message.chat.id}')

# @user_group_router.message(CommandStart())
# async def cmd_start(message: Message):
#     await test_driver()

# @user_group_router.message(CommandStart())
# async def cmd_start(message: Message):
#     await test_driver()


@user_group_router.callback_query(F.data.startswith('accept_'))
async def accept(callback: CallbackQuery, bot: Bot, state: FSMContext):
    try:
        await callback.answer('')
        order_id = await get_all_orders(callback.data.split('_')[1])
        message_id_pass = callback.data.split('_')[2]
        driver = await get_driver(callback.from_user.id)
        # if not driver.active:
        #     await bot.send_message(chat_id=callback.from_user.id,
        #                            text=f"–í—ã –Ω–µ –∞–∫—Ç–∏–≤–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–∫–∞–∑—ã.\n"
        #                                 f"–ù–∞–∂–º–∏—Ç–µ /start –∏ –≤—ã–π–¥–∏—Ç–µ –Ω–∞ –ª–∏–Ω–∏—é")
        #     return


        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ –Ω–∞—á–∞–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
        await start_order_execution(order_id.id, driver.id)
        # —É–¥–∞–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await bot.delete_message(chat_id=order_id.user_rel.tg_id, message_id=message_id_pass)

        message_pass = await bot.send_photo(chat_id=order_id.user_rel.tg_id,
                                            photo=driver.photo_car,
                                            caption=f'–í–æ–¥–∏—Ç–µ–ª—å –ø—Ä–∏–Ω—è–ª –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ü§ù\n\n'
                                                    f'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:<b> +{driver.phone}</b>\n\n'
                                                    f'–ê–≤—Ç–æ–º–æ–±–∏–ª—å:<b> {driver.car_name}</b>\n\n'
                                                    f'–ù–æ–º–µ—Ä: <b>{driver.number_car}</b>\n\n'
                                                    f'–¶–µ–Ω–∞ –ø–æ–µ–∑–¥–∫–∏: <b>{order_id.price}–†</b>\n\n')

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —Å–æ—Ö—Ä–∞–Ω—è—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è

        message_driver = await bot.send_message(chat_id=callback.from_user.id,
                                                text=f"–ó–∞–∫–∞–∑ <b>{order_id.id}</b>\n\n"
                                                     f"–¢–µ–ª–µ—Ñ–æ–Ω <b>+{order_id.user_rel.phone}</b>\n\n"
                                                     f"–ù–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞: <b>{order_id.point_start}</b>\n\n"
                                                     f"–ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞: <b>{order_id.point_end}</b>\n\n"
                                                # f"–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: <b>{order_id.distance}–∫–º</b>\n\n"
                                                # f"–í—Ä–µ–º—è –ø—É—Ç–∏: <b>{order_id.time_way}–º–∏–Ω</b>\n\n"
                                                     f"–¶–µ–Ω–∞: <b>{order_id.price}–†</b>\n\n"
                                                     f'‚åö –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –ø–æ–¥–∞—á–∏: ‚¨áÔ∏è',
                                                reply_markup=await kb.time_wait(order_id.id,
                                                                                message_pass.message_id))
        await bot.edit_message_reply_markup(
            chat_id=order_id.user_rel.tg_id,
            message_id=message_pass.message_id,
            reply_markup=await kb.delete_order(order_id.id, message_driver.message_id))

        await callback.message.edit_text(text=f'–¢–∞–∫—Å–∏ –±–æ—Ç\n'
                                              f'–í–æ–¥–∏—Ç–µ–ª—å {driver.name} –ø—Ä–∏–Ω—è–ª –∑–∞–∫–∞–∑',
                                         reply_markup=await kb.go_to_order())


    except AttributeError:
        await callback.answer('')
        await callback.message.edit_text('–ü–∞—Å—Å–∞–∂–∏—Ä –æ—Ç–º–µ–Ω–∏–ª –∑–∞–∫–∞–∑')
